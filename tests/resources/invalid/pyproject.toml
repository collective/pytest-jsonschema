[project]
description = "A pytest plugin to perform JSONSchema validations"
dynamic = ["version"]
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.10"
authors = [
    { name = "Érico Andrei", email = "ericof@plone.org" },
]
maintainers = [
    { name = "Érico Andrei", email = "ericof@plone.org" },
]
keywords = [
    "pytest",
    "testing",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: Pytest",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Programming Language :: Python",
    "Topic :: Software Development :: Testing",
]
dependencies = [
    "pytest>=6.2.0",
    "ruamel.yaml",
    "jsonschema",
    "tomli==2.0.1 ; python_version<='3.11'",
]

[dependency-groups]
test = [
    "pytest-cov",
    "pytest-xdist",
    "mypy>=1.15.0",
    "towncrier>=23.11.0",
    "pytest-md-report>=0.6.3",
    "zest-releaser[recommended]>=9.1.3",
    "zestreleaser-towncrier>=1.3.0",
    "requests>=2.32.3",
]

[project.urls]
Homepage = "https://github.com/collective/pytest-jsonschema"
PyPI = "https://pypi.org/project/pytest-jsonschema"
Source = "https://github.com/collective/pytest-jsonschema"
Tracker = "https://github.com/collective/pytest-jsonschema/issues"

[project.entry-points.pytest11]
jsonschema = "pytest_jsonschema.fixtures"

[tool.uv]
managed = true
default-groups = ["test"]

[tool.hatch.version]
path = "src/pytest_jsonschema/__init__.py"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
strict-naming = true

[tool.hatch.build.targets.sdist]
exclude = [
  "/.github",
]

[tool.hatch.build.targets.wheel]
packages = ["src/pytest_jsonschema"]

[tool.towncrier]
directory = "news/"
filename = "CHANGELOG.md"
start_string = "<!-- towncrier release notes start -->\n"
title_format = "## {version} ({project_date})"
template = "news/.changelog_template.jinja"
issue_format = "[#{issue}](https://github.com/collective/pytest-jsonschema/issues/{issue})"
underlines = ["", "", ""]

[[tool.towncrier.type]]
directory = "breaking"
name = "Breaking changes:"
showcontent = true

[[tool.towncrier.type]]
directory = "feature"
name = "New features:"
showcontent = true

[[tool.towncrier.type]]
directory = "bugfix"
name = "Bug fixes:"
showcontent = true

[[tool.towncrier.type]]
directory = "internal"
name = "Internal:"
showcontent = true

[[tool.towncrier.type]]
directory = "documentation"
name = "Documentation:"
showcontent = true

[[tool.towncrier.type]]
directory = "tests"
name = "Tests"
showcontent = true

[tool.ruff]
target-version = "py310"
line-length = 88
fix = true
lint.select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
]
lint.ignore = [
    # DoNotAssignLambda
    "E731",
]

[tool.ruff.lint.isort]
case-sensitive = false
no-sections = true
force-single-line = true
from-first = true
lines-after-imports = 2
lines-between-types = 1
order-by-type = false

[tool.ruff.format]
preview = true

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["E501", "RUF001", "S101"]

[tool.pytest.ini_options]
testpaths = ["tests"]
md_report = true
md_report_verbose = 0
md_report_color = "auto"

[tool.coverage.run]
source_pkgs = ["pytest_jsonschema", "tests"]
branch = true
parallel = true
omit = [
    "src/pytest_jsonschema/utils/update_schema.py"
]

[tool.mypy]
ignore_missing_imports = true

[tool.zest-releaser]
upload-pypi = false # Build and upload with uv
python-file-with-version = "src/pytest_jsonschema/__init__.py"
